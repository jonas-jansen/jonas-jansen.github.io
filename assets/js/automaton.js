function updateRulePreview(e){function t(e){let t=[];for(let i=2;i>=0;i--)t.push(e>>i&1);return t}const i=document.getElementById("rulePreview");i.innerHTML="";let s=[];for(let t=0;t<8;t++)s.push(e>>t&1);for(let e=7;e>-1;e--){const n=t(e),l=document.createElement("div");l.style.display="flex",l.style.flexDirection="column",l.style.alignItems="center",l.style.margin="0 6px";const r=document.createElement("div");r.style.display="flex",r.style.gap="4px",n.forEach(e=>{const t=document.createElement("div");t.style.width="24px",t.style.height="24px",t.style.backgroundColor=e?"white":"black",t.style.border="1px solid white",t.style.boxSizing="border-box",t.style.color=e?"black":"white",t.style.fontSize="14px",t.style.fontFamily="monospace",t.style.display="flex",t.style.justifyContent="center",t.style.alignItems="center",t.textContent=e?"1":"0",r.appendChild(t)});const a=document.createElement("div");a.style.width="24px",a.style.height="24px",a.style.marginTop="6px",a.style.cursor="pointer",a.style.border="1px solid white",a.style.backgroundColor=s[e]?"white":"black",a.addEventListener("click",()=>{s[e]=s[e]?0:1,a.style.backgroundColor=s[e]?"white":"black";let t=0;for(let e=0;e<8;e++)s[e]&&(t|=1<<e);ruleInput.value=t,automaton.setRuleNumber(t),controller.reset(),updateRulePreview(t)}),l.appendChild(r),l.appendChild(a),i.appendChild(l)}}class CellularAutomaton{constructor(e=40,t=100,i=30){this.spaceSize=e,this.maxTime=t,this.ruleNumber=i,this.grid=Array.from({length:t},()=>Array(e).fill(0)),this.rule=this.decodeRule(i),this.currentTime=0}decodeRule(e){const t=[];for(let i=0;i<8;i++)t.push(e>>i&1);return t}step(){if(this.currentTime>=this.maxTime-1)return!1;const e=this.grid[this.currentTime],t=Array(this.spaceSize).fill(0);for(let i=0;i<this.spaceSize;i++){const s=e[(i-1+this.spaceSize)%this.spaceSize]<<2|e[i]<<1|e[(i+1)%this.spaceSize];t[i]=this.rule[s]}return this.currentTime++,this.grid[this.currentTime]=t,!0}setRuleNumber(e){this.ruleNumber=e,this.rule=this.decodeRule(e)}reset(){this.grid=Array.from({length:this.maxTime},()=>Array(this.spaceSize).fill(0)),this.currentTime=0}}class Renderer{constructor(e,t){this.canvas=e,this.ctx=e.getContext("2d"),this.automaton=t,this.hoverCell=null,this.animationFrameId=null,this.glowAlpha=.3,this.glowIncreasing=!0,this.onResize(),window.addEventListener("resize",()=>this.onResize()),e.addEventListener("mousemove",e=>this.handleHover(e)),e.addEventListener("mouseleave",()=>this.handleMouseLeave())}onResize(){this.canvas.width=1200,this.cellW=this.canvas.width/this.automaton.spaceSize,this.cellH=this.cellW,this.canvas.height=this.cellH*this.automaton.maxTime,this.render()}handleHover(e){const t=this.canvas.getBoundingClientRect(),i=e.clientX-t.left,s=e.clientY-t.top,n=this.getCell(i,s);this.hoverCell&&n.row===this.hoverCell.row&&n.col===this.hoverCell.col||(this.hoverCell=n,this.startAnimation())}handleMouseLeave(){this.hoverCell=null,this.stopAnimation(),this.render()}getCell(e,t){return{row:Math.floor(t/this.cellH),col:Math.floor(e/this.cellW)}}startAnimation(){null===this.animationFrameId&&this.animationLoop()}stopAnimation(){null!==this.animationFrameId&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null)}animationLoop(){this.glowIncreasing?(this.glowAlpha+=.01,this.glowAlpha>=.8&&(this.glowIncreasing=!1)):(this.glowAlpha-=.01,this.glowAlpha<=.4&&(this.glowIncreasing=!0)),this.render(),this.animationFrameId=requestAnimationFrame(()=>this.animationLoop())}render(){const e=this.ctx,{cellW:t,cellH:i}=this;e.fillStyle="rgb(20,20,20)",e.fillRect(0,0,this.canvas.width,this.canvas.height),e.strokeStyle="#333",e.lineWidth=1;for(let i=0;i<=this.automaton.spaceSize;i++)e.beginPath(),e.moveTo(i*t,0),e.lineTo(i*t,this.canvas.height),e.stroke();for(let t=0;t<=this.automaton.maxTime;t++)e.beginPath(),e.moveTo(0,t*i),e.lineTo(this.canvas.width,t*i),e.stroke();e.fillStyle="white";for(let s=0;s<=this.automaton.currentTime;s++)for(let n=0;n<this.automaton.spaceSize;n++)1===this.automaton.grid[s][n]&&e.fillRect(n*t,s*i,t,i);if(this.hoverCell){const{row:s,col:n}=this.hoverCell;e.strokeStyle=`rgba(255,255,255,${this.glowAlpha.toFixed(2)})`,e.lineWidth=3,e.shadowColor=`rgba(255,255,255,${(this.glowAlpha/2).toFixed(2)})`,e.shadowBlur=8,e.strokeRect(n*t+1.5,s*i+1.5,t-3,i-3),e.shadowBlur=0}}}class Controller{constructor(e,t,i){this.canvas=e,this.automaton=t,this.renderer=i,this.interval=null,this.delay=100,this.isRunning=!1,this.isPaused=!1,e.addEventListener("click",s=>{const n=e.getBoundingClientRect(),l=s.clientX-n.left,r=s.clientY-n.top,{row:a,col:o}=i.getCell(l,r);0===a&&(t.grid[0][o]=t.grid[0][o]?0:1,i.render())})}start(){this.isRunning&&!this.isPaused||(this.isRunning=!0,this.isPaused=!1,this.interval=setInterval(()=>{const e=this.automaton.step();this.renderer.render(),e||this.stop()},this.delay))}pause(){this.interval&&(clearInterval(this.interval),this.interval=null,this.isPaused=!0)}stop(){this.isRunning=!1,this.isPaused=!1,this.interval&&(clearInterval(this.interval),this.interval=null)}reset(){this.stop(),this.automaton.reset(),this.renderer.render()}toggle(){this.isRunning?this.isPaused?this.start():this.pause():this.start()}}const canvas=document.getElementById("caCanvas"),ruleInput=document.getElementById("ruleInput"),startBtn=document.getElementById("startBtn"),resetBtn=document.getElementById("resetBtn"),rulePreview=document.getElementById("rulePreview"),spaceSize=40,maxTime=40,automaton=new CellularAutomaton(spaceSize,maxTime,parseInt(ruleInput.value)),renderer=new Renderer(canvas,automaton),controller=new Controller(canvas,automaton,renderer);renderer.render(),updateRulePreview(parseInt(ruleInput.value)),startBtn.addEventListener("click",()=>{controller.toggle(),controller.isRunning&&!controller.isPaused?startBtn.classList.add("paused"):startBtn.classList.remove("paused")}),ruleInput.addEventListener("input",()=>{const e=parseInt(ruleInput.value);!isNaN(e)&&e>=0&&e<=255&&(automaton.setRuleNumber(e),updateRulePreview(e),controller.reset(),startBtn.classList.remove("paused"))}),resetBtn.onclick=()=>{controller.reset(),startBtn.classList.remove("paused")};const randomBtn=document.getElementById("randomBtn");randomBtn.addEventListener("click",()=>{for(let e=0;e<automaton.spaceSize;e++)automaton.grid[0][e]=Math.random()<.5?0:1;automaton.currentTime=0,controller.stop(),renderer.render(),startBtn.classList.remove("paused")});