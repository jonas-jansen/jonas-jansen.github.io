function getColor(t,e){if(e<=0)return"hsl(0, 100%, 50%)";return`hsl(${t/e*120}, 100%, 50%)`}function stopAnimation(){isRunning=!1,animationId&&(cancelAnimationFrame(animationId),animationId=null)}function startAnimation(){isRunning||(isRunning=!0,liveRenderer.lastStepTime=null,animateLoop(performance.now()))}function animateLoop(t){if(!isRunning)return;liveRenderer.lastStepTime||(liveRenderer.lastStepTime=t);const e=(t-liveRenderer.lastStepTime)/1e3;if(liveRenderer.progress=e/liveRenderer.secondsPerStep,liveRenderer.progress>=1){if(liveRenderer.update(),!automaton.step())return void stopAnimation();liveRenderer.lastStepTime=t,liveRenderer.prevState=liveRenderer.nextState,liveRenderer.nextState=automaton.grid[automaton.currentTime],liveRenderer.progress=0}liveRenderer.draw(liveRenderer.progress),animationId=requestAnimationFrame(animateLoop)}class NagelSchreckenberg{constructor(t=120,e=100,i=5,s=.3,a=.3){this.spaceSize=t,this.maxTime=e,this.vmax=i,this.p=s,this.density=a,this.carIDCounter=0,this.grid=Array.from({length:e},()=>Array(t).fill(null)),this.currentTime=0,this.initializeGrid()}initializeGrid(){const t=Array(this.spaceSize).fill(null);for(let e=0;e<this.spaceSize;e++)if(Math.random()<this.density){const i=Math.floor(Math.random()*this.vmax);t[e]={id:this.carIDCounter++,speed:i}}this.grid[0]=t}step(){if(this.currentTime>=this.maxTime-1)return!1;const t=this.grid[this.currentTime],e=Array(this.spaceSize).fill(null);for(let i=0;i<this.spaceSize;i++){const s=t[i];if(!s)continue;let a=Math.min(s.speed+1,this.vmax),n=0;for(let e=1;e<=a&&!t[(i+e)%this.spaceSize];e++)n++;a=Math.min(a,n),a>0&&Math.random()<this.p&&a--;e[(i+a)%this.spaceSize]={id:s.id,speed:a}}return this.currentTime++,this.grid[this.currentTime]=e,!0}reset(){this.grid=Array.from({length:this.maxTime},()=>Array(this.spaceSize).fill(null)),this.currentTime=0,this.carIDCounter=0,this.initializeGrid()}}class LiveRenderer{constructor(t,e,i,s=.5,a=12){this.canvas=t,this.static_canvas=e,this.ctx=t.getContext("2d"),this.static_ctx=e.getContext("2d"),this.automaton=i,this.secondsPerStep=s,this.cellSize=a,this.lastStepTime=null,this.progress=0,this.prevState=i.grid[0],this.nextState=i.grid[1],this.animationFrameId=null,this.canvas.height=this.cellSize,this.canvas.width=i.spaceSize*this.cellSize,this.static_canvas.width=i.spaceSize*this.cellSize,this.static_canvas.height=i.maxTime*this.cellSize,this.initialize()}initialize(){const t=this.static_ctx,e=this.ctx,i=this.automaton.grid[0],s=this.cellSize;if(i)for(let a=0;a<this.automaton.spaceSize;a++){const n=i[a];n&&(t.fillStyle=getColor(n.speed,this.automaton.vmax),t.fillRect(a*s,0,s,s),e.fillStyle=getColor(n.speed,this.automaton.vmax),e.fillRect(a*s,0,s,s))}}getPositionsById(t){const e=new Map;for(let i=0;i<t.length;i++){const s=t[i];s&&e.set(s.id,{pos:i,speed:s.speed})}return e}update(){const t=this.static_ctx,e=this.automaton.currentTime,i=this.automaton.grid[e],s=this.cellSize;if(i&&!(e>=this.automaton.maxTime))for(let a=0;a<this.automaton.spaceSize;a++){const n=i[a];n&&(t.fillStyle=getColor(n.speed,this.automaton.vmax),t.fillRect(a*s,e*s,s,s))}}draw(t){const e=this.ctx,i=this.automaton.spaceSize,s=this.getPositionsById(this.prevState),a=this.getPositionsById(this.nextState);e.fillStyle="black",e.fillRect(0,0,this.canvas.width,this.canvas.height);for(const[n,r]of a.entries()){const a=s.get(n);if(!a)continue;const l=a.pos,o=(l+t*((r.pos-l+i)%i))%i;e.fillStyle=getColor(r.speed,this.automaton.vmax),e.fillRect(o*this.cellSize,0,this.cellSize,this.cellSize)}}animate(t){this.lastStepTime||(this.lastStepTime=t);const e=(t-this.lastStepTime)/1e3;if(this.progress=e/this.secondsPerStep,this.progress>=1){if(!this.automaton.step())return;this.lastStepTime=t,this.prevState=this.nextState,this.nextState=this.automaton.grid[this.automaton.currentTime],this.progress=0}this.draw(this.progress),this.animationFrameId=requestAnimationFrame(t=>this.animate(t))}reset(){this.static_ctx.clearRect(0,0,this.static_canvas.width,this.static_canvas.height),this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),automaton=new NagelSchreckenberg(spaceSize,maxTime,parseInt(vInput.value),parseFloat(pSlider.value),parseFloat(densitySlider.value)),this.automaton=automaton,automaton.step(),this.lastStepTime=null,this.progress=0,this.prevState=this.automaton.grid[0],this.nextState=this.automaton.grid[1]??this.automaton.grid[0],this.initialize()}}const cellSize=12,densitySlider=document.getElementById("densitySlider"),densityValue=document.getElementById("densityValue"),pSlider=document.getElementById("pSlider"),pValue=document.getElementById("pValue"),vmaxValue=15,spaceSize=100,maxTime=200,startPauseBtn=document.getElementById("startBtn"),resetBtn=document.getElementById("resetBtn"),vInput=document.getElementById("vInput");let isRunning=!1,animationId=null,automaton=new NagelSchreckenberg(spaceSize,maxTime,parseInt(vInput.value),parseFloat(pSlider.value),parseFloat(densitySlider.value));automaton.step();const liveCanvas=document.getElementById("liveCanvas"),timeCanvas=document.getElementById("caCanvas"),liveRenderer=new LiveRenderer(liveCanvas,timeCanvas,automaton,.5,cellSize);densityValue.textContent=densitySlider.value,pValue.textContent=pSlider.value,densitySlider.oninput=()=>{densityValue.textContent=densitySlider.value},pSlider.oninput=()=>{pValue.textContent=pSlider.value},startPauseBtn.onclick=()=>{isRunning?(stopAnimation(),startPauseBtn.classList.remove("paused")):(startAnimation(),startBtn.classList.add("paused"))},resetBtn.onclick=()=>{stopAnimation(),liveRenderer.reset(),startBtn.classList.remove("paused")};